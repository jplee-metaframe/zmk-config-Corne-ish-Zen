/*
* 
* Copyright (c) 2021 lowprokb.ca
* SPDX-License-Identifier: MIT
*
* vi: ft=c
*/

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define BASE   0
#define NUMBER 1
#define SYMBOL 2
#define FUNC   3


/ {
  keymap {
    compatible = "zmk,keymap";

    default_layer {
      label = "BASE";
      bindings = <
        &kp TAB  &kp Q      &kp W      &kp E      &kp R      &kp T                     &kp Y      &kp U      &kp I      &kp O      &kp P      &kp DEL
  &mt LCTRL ESC  &kp A      &kp S      &kp D      &kp F      &kp G                     &kp H      &kp J      &kp K      &kp L      &kp SEMI   &mt RCTRL APOS
      &kp LSHFT  &kp Z      &kp X      &kp C      &kp V      &kp B                     &kp N      &kp M      &kp COMMA  &kp DOT    &kp FSLH   &mt RSHFT ENTER
                                       &kp LALT   &kp LGUI   &lt NUMBER SPC  &lt SYMBOL BKSP      &mo FUNC   &kp RGUI
                 >;
    };

    number_layer {
      label = "NUMBER";
      bindings = <
      &kp GRAVE  &kp N1     &kp N2     &kp N3     &kp N4     &kp N5                    &kp N6     &kp N7     &kp N8     &kp N9     &kp N0     &none
      &kp TILDE  &kp EXCL   &kp AT     &kp HASH   &kp DLLR   &kp PRCNT                 &kp CARET  &kp AMPS   &kp STAR   &kp LPAR   &kp RPAR   &trans
         &trans  &none      &none      &none      &none      &none                     &none      &none      &none      &none      &none      &trans
                                       &trans     &trans     &trans                    &trans     &trans     &trans                          
                 >;
    };

    symbol_layer {
      label = "SYMBOL";
      bindings = <
      &kp TILDE  &kp EXCL   &kp AT     &kp HASH   &kp DLLR   &kp PRCNT                 &kp CARET  &kp AMPS   &kp STAR   &kp LPAR   &kp RPAR   &none
         &trans  &none      &none      &none      &none      &none                     &kp LBKT   &kp RBKT   &kp BSLH   &kp MINUS  &kp EQUAL  &trans
         &trans  &none      &none      &none      &none      &none                     &kp LBRC   &kp RBRC   &kp PIPE   &kp UNDER  &kp PLUS   &trans
                                       &trans     &trans     &trans                    &trans     &trans     &trans                          
                 >;
    };

    func_layer {
      label = "FUNC";
      bindings = <
         &none   &kp F1     &kp F2     &kp F3     &kp F4     &kp F5                    &kp HOME   &kp PG_DN  &kp PG_UP  &kp END    &none      &none
         &trans  &kp F6     &kp F7     &kp F8     &kp F9     &kp F10                   &kp LEFT   &kp DOWN   &kp UP     &kp RIGHT  &none      &trans 
         &trans  &none      &none      &none      &kp F11    &kp F12                   &none      &none      &none      &none      &none      &trans
                                       &trans     &trans     &trans                    &trans     &trans     &trans                          
                 >;
    };
  };


  combos {
    compatible = "zmk,combos";

    combo_bt_clr {
      timeout-ms = <50>;
      layers = <1>;
      key-positions = <24 36 37>;
      bindings = <&bt CLR>;
    };

    combo_bt_a {
      timeout-ms = <50>;
      layers = <1>;
      key-positions = <25 36 37>;
      bindings = <&bt BT_SEL 0>;
    };

    combo_bt_b {
      timeout-ms = <50>;
      layers = <1>;
      key-positions = <26 36 37>;
      bindings = <&bt BT_SEL 1>;
    };

    combo_bt_c {
      timeout-ms = <50>;
      layers = <1>;
      key-positions = <27 36 37>;
      bindings = <&bt BT_SEL 2>;
    };

    combo_bt_d {
      timeout-ms = <50>;
      layers = <1>;
      key-positions = <28 36 37>;
      bindings = <&bt BT_SEL 3>;
    };

    combo_bt_e {
      timeout-ms = <50>;
      layers = <1>;
      key-positions = <29 36 37>;
      bindings = <&bt BT_SEL 4>;
    };

    combo_reset {
      timeout-ms = <50>;
      layers = <1>;
      key-positions = <30 36 37>;
      bindings = <&reset>;
    };
  };
};
